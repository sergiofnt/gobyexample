<!DOCTYPE html>
<html>
<head>
	<meta http-eqiv="content-type" content="text/html;charset=utf-8" />
	<title>Go за Прикладом: Діапазон (Range) з Каналами</title>
	<link rel=stylesheet href="site.css" />
	<script async src="https://www.googletagmanager.com/gtag/js?id=UA-75170058-3"></script>
	<script type="text/javascript">
	if (window.location.host == "gobyexample.com.ua") {
		window.dataLayer = window.dataLayer || [];
		function gtag(){dataLayer.push(arguments);}
		gtag('js',      new Date());
		gtag('config', 'UA-75170058-3');
	}
	</script>
</head>
<body>
	<div class="example" id="range-over-channels">
	<h2><a href="./">Go за Прикладом</a>: Діапазон (Range) з Каналами</h2>
	
	<table>
		
		<tr>
			<td class="docs"><p>В попередньому <a href="range">прикладі</a> ми дізнались як <code>for</code> та
<code>range</code> забезпечують ітерацію базових структур даних,
але цей синтаксис можна використи і для отримання значень з каналу.</p>
</td>
			<td class="code empty leading">
			
			
			</td>
		</tr>
	
		<tr>
			<td class="docs"></td>
			<td class="code leading">
			<a href="http://play.golang.org/p/-eh5wvEPR6s"><img title="Run code" src="play.png" class="run" /></a>
			<div class="highlight"><pre><span class="kn">package</span> <span class="nx">main</span>
</pre></div>

			</td>
		</tr>
	
		<tr>
			<td class="docs"></td>
			<td class="code leading">
			
			<div class="highlight"><pre><span class="kn">import</span> <span class="s">&quot;fmt&quot;</span>
</pre></div>

			</td>
		</tr>
	
		<tr>
			<td class="docs"></td>
			<td class="code leading">
			
			<div class="highlight"><pre><span class="kd">func</span> <span class="nx">main</span><span class="p">()</span> <span class="p">{</span>
</pre></div>

			</td>
		</tr>
	
		<tr>
			<td class="docs"><p>Ми створемо канал <code>queue</code> і надішлемо до нього два строкових значення,
після чого ми закриємо його.</p>
</td>
			<td class="code leading">
			
			<div class="highlight"><pre>    <span class="nx">queue</span> <span class="o">:=</span> <span class="nb">make</span><span class="p">(</span><span class="kd">chan</span> <span class="kt">string</span><span class="p">,</span> <span class="mi">2</span><span class="p">)</span>
    <span class="nx">queue</span> <span class="o">&lt;-</span> <span class="s">&quot;раз&quot;</span>
    <span class="nx">queue</span> <span class="o">&lt;-</span> <span class="s">&quot;два&quot;</span>
    <span class="nb">close</span><span class="p">(</span><span class="nx">queue</span><span class="p">)</span>
</pre></div>

			</td>
		</tr>
	
		<tr>
			<td class="docs"><p>Скориставшись <code>range</code> ми пройдемось по значеннях <code>queue</code>, a так як ми
закрили цей канал - ітерація припиняється, після отримання
усіх (2) елементів з нього.</p>
</td>
			<td class="code">
			
			<div class="highlight"><pre>    <span class="k">for</span> <span class="nx">elem</span> <span class="o">:=</span> <span class="k">range</span> <span class="nx">queue</span> <span class="p">{</span>
        <span class="nx">fmt</span><span class="p">.</span><span class="nx">Println</span><span class="p">(</span><span class="nx">elem</span><span class="p">)</span>
    <span class="p">}</span>
<span class="p">}</span>
</pre></div>

			</td>
		</tr>
	
	</table>
	
	<table>
		
		<tr>
			<td class="docs"><p>Цей приклад також демонструє здатність закривати не пустий канал і
все ж отримувати з нього значення.</p>
</td>
			<td class="code">
			
			<div class="highlight"><pre><span class="gp">$</span> go run range-over-channels.go
<span class="go">one</span>
<span class="go">two</span>
</pre></div>

			</td>
		</tr>
	
	</table>
	


	<p class="next">
		Наступний приклад: <a href="timers">Хронометри (Timers)</a>.
	</p>

<p class="footer">
Автор <a href="https://twitter.com/mmcgrana">@mmcgrana</a> | Переклад <a href="https://twitter.com/butuzov">@butuzov</a> | <a href="https://github.com/butuzov/gobyexample/blob/ukrainian/examples/range-over-channels">source</a> | <a href="https://github.com/butuzov/gobyexample#license">ліцензія</a>
</p>
</div>
</body>
</html>
