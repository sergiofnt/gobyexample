<!DOCTYPE html>
<html>
<head>
	<meta http-eqiv="content-type" content="text/html;charset=utf-8" />
	<title>Go за Прикладом: Обмеження Частоти Запитів</title>
	<link rel=stylesheet href="site.css" />
	<script async src="https://www.googletagmanager.com/gtag/js?id=UA-75170058-3"></script>
	<script type="text/javascript">
	if (window.location.host == "gobyexample.com.ua") {
		window.dataLayer = window.dataLayer || [];
		function gtag(){dataLayer.push(arguments);}
		gtag('js',      new Date());
		gtag('config', 'UA-75170058-3');
	}
	</script>
</head>
<body>
	<div class="example" id="rate-limiting">
	<h2><a href="./">Go за Прикладом</a>: Обмеження Частоти Запитів</h2>
	
	<table>
		
		<tr>
			<td class="docs"><p><a href="http://en.wikipedia.org/wiki/Rate_limiting"><em>Обмеження Частоти Запитів</em></a>
важливий механізм контролю за ресурсами, його використовують
для підтримки необхідного рівня роботи (і обмеження навантаження
на сервера з сторонніх джерел). Реалізація обмежувача в Go є можливою
за допомоги <a href="goroutines">горутин</a>, <a href="channels">каналів</a> та <a href="tickers">маятників</a>.</p>
</td>
			<td class="code empty leading">
			
			
			</td>
		</tr>
	
		<tr>
			<td class="docs"></td>
			<td class="code leading">
			<a href="http://play.golang.org/p/nd2O6ebiBih"><img title="Run code" src="play.png" class="run" /></a>
			<div class="highlight"><pre><span class="kn">package</span> <span class="nx">main</span>
</pre></div>

			</td>
		</tr>
	
		<tr>
			<td class="docs"></td>
			<td class="code leading">
			
			<div class="highlight"><pre><span class="kn">import</span> <span class="s">&quot;time&quot;</span>
<span class="kn">import</span> <span class="s">&quot;fmt&quot;</span>
</pre></div>

			</td>
		</tr>
	
		<tr>
			<td class="docs"></td>
			<td class="code leading">
			
			<div class="highlight"><pre><span class="kd">func</span> <span class="nx">main</span><span class="p">()</span> <span class="p">{</span>
</pre></div>

			</td>
		</tr>
	
		<tr>
			<td class="docs"><p>Розглянемо одну з реалізацій обмежувача частоти запитів.
Припустимо - нам необхідно обмежити обробку
вхідних запитів, отож, ми будемо працювати з ними (запитами)
через одноіменний канал (<code>requests</code>).</p>
</td>
			<td class="code leading">
			
			<div class="highlight"><pre>    <span class="nx">requests</span> <span class="o">:=</span> <span class="nb">make</span><span class="p">(</span><span class="kd">chan</span> <span class="kt">int</span><span class="p">,</span> <span class="mi">5</span><span class="p">)</span>
    <span class="k">for</span> <span class="nx">i</span> <span class="o">:=</span> <span class="mi">1</span><span class="p">;</span> <span class="nx">i</span> <span class="o">&lt;=</span> <span class="mi">5</span><span class="p">;</span> <span class="nx">i</span><span class="o">++</span> <span class="p">{</span>
        <span class="nx">requests</span> <span class="o">&lt;-</span> <span class="nx">i</span>
    <span class="p">}</span>
    <span class="nb">close</span><span class="p">(</span><span class="nx">requests</span><span class="p">)</span>
</pre></div>

			</td>
		</tr>
	
		<tr>
			<td class="docs"><p>Канал <code>limiter</code> (або &ldquo;обмежувач&rdquo;) буде приймати
значення кожні 200 мілісекунд - це так званий &ldquo;маятник&rdquo;,
або &ldquo;регулятор&rdquo; нашої системи обмеження.</p>
</td>
			<td class="code leading">
			
			<div class="highlight"><pre>    <span class="nx">limiter</span> <span class="o">:=</span> <span class="nx">time</span><span class="p">.</span><span class="nx">Tick</span><span class="p">(</span><span class="mi">200</span> <span class="o">*</span> <span class="nx">time</span><span class="p">.</span><span class="nx">Millisecond</span><span class="p">)</span>
</pre></div>

			</td>
		</tr>
	
		<tr>
			<td class="docs"><p>Тут відбувається блокування на отримання з каналу
<code>limiter</code> перед обробкою кожного запиту, ми чекатимемо
повідомлення кожні 200 мс і обробляємо по одному запиту
за цей період.</p>
</td>
			<td class="code leading">
			
			<div class="highlight"><pre>    <span class="k">for</span> <span class="nx">req</span> <span class="o">:=</span> <span class="k">range</span> <span class="nx">requests</span> <span class="p">{</span>
        <span class="o">&lt;-</span><span class="nx">limiter</span>
        <span class="nx">fmt</span><span class="p">.</span><span class="nx">Println</span><span class="p">(</span><span class="s">&quot;request&quot;</span><span class="p">,</span> <span class="nx">req</span><span class="p">,</span> <span class="nx">time</span><span class="p">.</span><span class="nx">Now</span><span class="p">())</span>
    <span class="p">}</span>
</pre></div>

			</td>
		</tr>
	
		<tr>
			<td class="docs"><p>Можливо, ми захочемо дозволяти невеликі &ldquo;навали&rdquo; запитів,
вцілому притримуючись нашої стандартної схеми обмежень.
Досягнути цього ми можемо створивши буфер
в нашому каналі &ldquo;обмеження&rdquo;. Канал <code>burstyLimiter</code>
дозволятиме напиливи, аж, трьох подій.</p>
</td>
			<td class="code leading">
			
			<div class="highlight"><pre>    <span class="nx">burstyLimiter</span> <span class="o">:=</span> <span class="nb">make</span><span class="p">(</span><span class="kd">chan</span> <span class="nx">time</span><span class="p">.</span><span class="nx">Time</span><span class="p">,</span> <span class="mi">3</span><span class="p">)</span>
</pre></div>

			</td>
		</tr>
	
		<tr>
			<td class="docs"><p>Заповемо канал значеннями, для імітуванння &ldquo;напливу&rdquo;.</p>
</td>
			<td class="code leading">
			
			<div class="highlight"><pre>    <span class="k">for</span> <span class="nx">i</span> <span class="o">:=</span> <span class="mi">0</span><span class="p">;</span> <span class="nx">i</span> <span class="p">&lt;</span> <span class="mi">3</span><span class="p">;</span> <span class="nx">i</span><span class="o">++</span> <span class="p">{</span>
        <span class="nx">burstyLimiter</span> <span class="o">&lt;-</span> <span class="nx">time</span><span class="p">.</span><span class="nx">Now</span><span class="p">()</span>
    <span class="p">}</span>
</pre></div>

			</td>
		</tr>
	
		<tr>
			<td class="docs"><p>Кожні 200 мілісекунд ми спробуємо додати значення в
<code>burstyLimiter</code>, аж до його ліміту в 3 події. Ми, так
би кажучи - знову &ldquo;наповнюємо пустий келих&rdquo;.</p>
</td>
			<td class="code leading">
			
			<div class="highlight"><pre>    <span class="k">go</span> <span class="kd">func</span><span class="p">()</span> <span class="p">{</span>
        <span class="k">for</span> <span class="nx">t</span> <span class="o">:=</span> <span class="k">range</span> <span class="nx">time</span><span class="p">.</span><span class="nx">Tick</span><span class="p">(</span><span class="mi">200</span> <span class="o">*</span> <span class="nx">time</span><span class="p">.</span><span class="nx">Millisecond</span><span class="p">)</span> <span class="p">{</span>
            <span class="nx">burstyLimiter</span> <span class="o">&lt;-</span> <span class="nx">t</span>
        <span class="p">}</span>
    <span class="p">}()</span>
</pre></div>

			</td>
		</tr>
	
		<tr>
			<td class="docs"><p>Ми симулюємо 5 вхідних подій, 3 з яких
- не будуть обмежені у виконанні, а все тому,
що вони отримали перевагу від буферизованого
каналу <code>burstyLimiter</code>, який блокує доступ
для 4-того та 5-того запитів, аж до моменту коли
сам канал &ldquo;обмежувач&rdquo; не буде знову наповнено.</p>
</td>
			<td class="code">
			
			<div class="highlight"><pre>    <span class="nx">burstyRequests</span> <span class="o">:=</span> <span class="nb">make</span><span class="p">(</span><span class="kd">chan</span> <span class="kt">int</span><span class="p">,</span> <span class="mi">5</span><span class="p">)</span>
    <span class="k">for</span> <span class="nx">i</span> <span class="o">:=</span> <span class="mi">1</span><span class="p">;</span> <span class="nx">i</span> <span class="o">&lt;=</span> <span class="mi">5</span><span class="p">;</span> <span class="nx">i</span><span class="o">++</span> <span class="p">{</span>
        <span class="nx">burstyRequests</span> <span class="o">&lt;-</span> <span class="nx">i</span>
    <span class="p">}</span>
    <span class="nb">close</span><span class="p">(</span><span class="nx">burstyRequests</span><span class="p">)</span>
    <span class="k">for</span> <span class="nx">req</span> <span class="o">:=</span> <span class="k">range</span> <span class="nx">burstyRequests</span> <span class="p">{</span>
        <span class="o">&lt;-</span><span class="nx">burstyLimiter</span>
        <span class="nx">fmt</span><span class="p">.</span><span class="nx">Println</span><span class="p">(</span><span class="s">&quot;request&quot;</span><span class="p">,</span> <span class="nx">req</span><span class="p">,</span> <span class="nx">time</span><span class="p">.</span><span class="nx">Now</span><span class="p">())</span>
    <span class="p">}</span>
<span class="p">}</span>
</pre></div>

			</td>
		</tr>
	
	</table>
	
	<table>
		
		<tr>
			<td class="docs"><p>Запускаючи нашу програму - ми бачимо першу
партію запитів, які обробляються кожні 200
мілісекунд. програму</p>
</td>
			<td class="code leading">
			
			<div class="highlight"><pre><span class="gp">$</span> go run rate-limiting.go
<span class="go">request 1 2012-10-19 00:38:18.687438 +0000 UTC</span>
<span class="go">request 2 2012-10-19 00:38:18.887471 +0000 UTC</span>
<span class="go">request 3 2012-10-19 00:38:19.087238 +0000 UTC</span>
<span class="go">request 4 2012-10-19 00:38:19.287338 +0000 UTC</span>
<span class="go">request 5 2012-10-19 00:38:19.487331 +0000 UTC</span>
</pre></div>

			</td>
		</tr>
	
		<tr>
			<td class="docs"><p>Друга ж партія, представляє собою
три запити що не обмежуються (це &ldquo;навала&rdquo;
- дозволена кількість без обмеження) та
ще 2 - додаткових, що обмежені 200
мілісекундними інтервалами.</p>
</td>
			<td class="code">
			
			<div class="highlight"><pre><span class="go">request 1 2012-10-19 00:38:20.487578 +0000 UTC</span>
<span class="go">request 2 2012-10-19 00:38:20.487645 +0000 UTC</span>
<span class="go">request 3 2012-10-19 00:38:20.487676 +0000 UTC</span>
<span class="go">request 4 2012-10-19 00:38:20.687483 +0000 UTC</span>
<span class="go">request 5 2012-10-19 00:38:20.887542 +0000 UTC</span>
</pre></div>

			</td>
		</tr>
	
	</table>
	


	<p class="next">
		Наступний приклад: <a href="atomic-counters">Атомарні Лічильники</a>.
	</p>

<p class="footer">
Автор <a href="https://twitter.com/mmcgrana">@mmcgrana</a> | Переклад <a href="https://twitter.com/butuzov">@butuzov</a> | <a href="https://github.com/butuzov/gobyexample/blob/ukrainian/examples/rate-limiting">source</a> | <a href="https://github.com/butuzov/gobyexample#license">ліцензія</a>
</p>
</div>
</body>
</html>
