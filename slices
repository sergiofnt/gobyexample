<!DOCTYPE html>
<html>
<head>
	<meta http-eqiv="content-type" content="text/html;charset=utf-8" />
	<title>Go за Прикладом: Зрізи (Slices)</title>
	<link rel=stylesheet href="site.css" />
	<script async src="https://www.googletagmanager.com/gtag/js?id=UA-75170058-3"></script>
	<script type="text/javascript">
	if (window.location.host == "gobyexample.com.ua") {
		window.dataLayer = window.dataLayer || [];
		function gtag(){dataLayer.push(arguments);}
		gtag('js',      new Date());
		gtag('config', 'UA-75170058-3');
	}
	</script>
</head>
<body>
	<div class="example" id="slices">
	<h2><a href="./">Go за Прикладом</a>: Зрізи (Slices)</h2>
	
	<table>
		
		<tr>
			<td class="docs"><p><code>slice</code> або <em>зріз</em> одним з найважливіших типів даних у GO,
Він представляє собою зручний інтерфейс до послідовностей,
основою яких є інший тип даних - <a href="./arrays">масив</a>.</p>
</td>
			<td class="code empty leading">
			
			
			</td>
		</tr>
	
		<tr>
			<td class="docs"></td>
			<td class="code leading">
			<a href="http://play.golang.org/p/jbOkzu4tJNR"><img title="Run code" src="play.png" class="run" /></a>
			<div class="highlight"><pre><span class="kn">package</span> <span class="nx">main</span>
</pre></div>

			</td>
		</tr>
	
		<tr>
			<td class="docs"></td>
			<td class="code leading">
			
			<div class="highlight"><pre><span class="kn">import</span> <span class="s">&quot;fmt&quot;</span>
</pre></div>

			</td>
		</tr>
	
		<tr>
			<td class="docs"></td>
			<td class="code leading">
			
			<div class="highlight"><pre><span class="kd">func</span> <span class="nx">main</span><span class="p">()</span> <span class="p">{</span>
</pre></div>

			</td>
		</tr>
	
		<tr>
			<td class="docs"><p>На відміну від, масиву, зріз обмежений лише типом
елементів який він зобов’язуються зберігати
(масиви ж, надодачу обмежені кількостю елементів).
Створити пустий зріз, не нульової довжини можливо
скориставшись функцією <code>make</code>. Зверніть увагу
на приклад створення зрізу рядків довжиною в 3 елементи
(усі строки початково ініціалізовані з нульовим значенням).</p>
</td>
			<td class="code leading">
			
			<div class="highlight"><pre>    <span class="nx">s</span> <span class="o">:=</span> <span class="nb">make</span><span class="p">([]</span><span class="kt">string</span><span class="p">,</span> <span class="mi">3</span><span class="p">)</span>
    <span class="nx">fmt</span><span class="p">.</span><span class="nx">Println</span><span class="p">(</span><span class="s">&quot;emp:&quot;</span><span class="p">,</span> <span class="nx">s</span><span class="p">)</span>
</pre></div>

			</td>
		</tr>
	
		<tr>
			<td class="docs"><p>Встановлюємо та звертаємось до значень зрізу
аналогічно масивам.</p>
</td>
			<td class="code leading">
			
			<div class="highlight"><pre>    <span class="nx">s</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="p">=</span> <span class="s">&quot;a&quot;</span>
    <span class="nx">s</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span> <span class="p">=</span> <span class="s">&quot;b&quot;</span>
    <span class="nx">s</span><span class="p">[</span><span class="mi">2</span><span class="p">]</span> <span class="p">=</span> <span class="s">&quot;c&quot;</span>
    <span class="nx">fmt</span><span class="p">.</span><span class="nx">Println</span><span class="p">(</span><span class="s">&quot;set:&quot;</span><span class="p">,</span> <span class="nx">s</span><span class="p">)</span>
    <span class="nx">fmt</span><span class="p">.</span><span class="nx">Println</span><span class="p">(</span><span class="s">&quot;get:&quot;</span><span class="p">,</span> <span class="nx">s</span><span class="p">[</span><span class="mi">2</span><span class="p">])</span>
</pre></div>

			</td>
		</tr>
	
		<tr>
			<td class="docs"><p><code>len</code> поверне довжину зрізу.</p>
</td>
			<td class="code leading">
			
			<div class="highlight"><pre>    <span class="nx">fmt</span><span class="p">.</span><span class="nx">Println</span><span class="p">(</span><span class="s">&quot;len:&quot;</span><span class="p">,</span> <span class="nb">len</span><span class="p">(</span><span class="nx">s</span><span class="p">))</span>
</pre></div>

			</td>
		</tr>
	
		<tr>
			<td class="docs"><p>На додачу, до базових операцій, зрізи підтримують ще
кілька додаткових - що робить їх значно привабливішими, ніж масиви.
Перша з цих операцій - це функція <code>append</code>, що поверне зріз,
який зберігатиме одне або більше <em>нових значень</em>.
Зауважимо, потрібно присвоїти значення змінні зріза,
що повертається з <code>append</code> - оскільки ми можемо отримати
новий зразок зрізу (новий <code>instance</code>).</p>
</td>
			<td class="code leading">
			
			<div class="highlight"><pre>    <span class="nx">s</span> <span class="p">=</span> <span class="nb">append</span><span class="p">(</span><span class="nx">s</span><span class="p">,</span> <span class="s">&quot;d&quot;</span><span class="p">)</span>
    <span class="nx">s</span> <span class="p">=</span> <span class="nb">append</span><span class="p">(</span><span class="nx">s</span><span class="p">,</span> <span class="s">&quot;e&quot;</span><span class="p">,</span> <span class="s">&quot;f&quot;</span><span class="p">)</span>
    <span class="nx">fmt</span><span class="p">.</span><span class="nx">Println</span><span class="p">(</span><span class="s">&quot;apd:&quot;</span><span class="p">,</span> <span class="nx">s</span><span class="p">)</span>
</pre></div>

			</td>
		</tr>
	
		<tr>
			<td class="docs"><p>Зрізи також можуть бути зкопійовані. В цьому прикладі
ми створемо новий зріз <code>c</code> аналогічного типу та довжини
що і <code>s</code>, після чого використовуючи <code>copy</code> скопієюмо
значення <code>s</code> в <code>c</code>.</p>
</td>
			<td class="code leading">
			
			<div class="highlight"><pre>    <span class="nx">c</span> <span class="o">:=</span> <span class="nb">make</span><span class="p">([]</span><span class="kt">string</span><span class="p">,</span> <span class="nb">len</span><span class="p">(</span><span class="nx">s</span><span class="p">))</span>
    <span class="nb">copy</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span> <span class="nx">s</span><span class="p">)</span>
    <span class="nx">fmt</span><span class="p">.</span><span class="nx">Println</span><span class="p">(</span><span class="s">&quot;cpy:&quot;</span><span class="p">,</span> <span class="nx">c</span><span class="p">)</span>
</pre></div>

			</td>
		</tr>
	
		<tr>
			<td class="docs"><p>Зрізи підтримують оператор &ldquo;зрізання&rdquo; за допомогою
наступного синтаксису <code>зріз[з_ніжного_індексу:до_верхнього_індексу]</code>.
В нашому прикладі, ця операція отримає зріз<code>s</code>, що
складається з елементів <code>s[2]</code>, <code>s[3]</code> та <code>s[4]</code> та представе
його як <code>l</code>.</p>
</td>
			<td class="code leading">
			
			<div class="highlight"><pre>    <span class="nx">l</span> <span class="o">:=</span> <span class="nx">s</span><span class="p">[</span><span class="mi">2</span><span class="p">:</span><span class="mi">5</span><span class="p">]</span>
    <span class="nx">fmt</span><span class="p">.</span><span class="nx">Println</span><span class="p">(</span><span class="s">&quot;sl1:&quot;</span><span class="p">,</span> <span class="nx">l</span><span class="p">)</span>
</pre></div>

			</td>
		</tr>
	
		<tr>
			<td class="docs"><p>Приклад зрізання усіх елеметів до (але виключаючи) <code>s[5]</code>.</p>
</td>
			<td class="code leading">
			
			<div class="highlight"><pre>    <span class="nx">l</span> <span class="p">=</span> <span class="nx">s</span><span class="p">[:</span><span class="mi">5</span><span class="p">]</span>
    <span class="nx">fmt</span><span class="p">.</span><span class="nx">Println</span><span class="p">(</span><span class="s">&quot;sl2:&quot;</span><span class="p">,</span> <span class="nx">l</span><span class="p">)</span>
</pre></div>

			</td>
		</tr>
	
		<tr>
			<td class="docs"><p>Приклад зрізання усьіх елементів з (але включаючи) <code>s[2]</code>.</p>
</td>
			<td class="code leading">
			
			<div class="highlight"><pre>    <span class="nx">l</span> <span class="p">=</span> <span class="nx">s</span><span class="p">[</span><span class="mi">2</span><span class="p">:]</span>
    <span class="nx">fmt</span><span class="p">.</span><span class="nx">Println</span><span class="p">(</span><span class="s">&quot;sl3:&quot;</span><span class="p">,</span> <span class="nx">l</span><span class="p">)</span>
</pre></div>

			</td>
		</tr>
	
		<tr>
			<td class="docs"><p>Нам дозволяється декларувати та ініціалізувати
значення змінних в зрізі одним рядком (так само і масиви).</p>
</td>
			<td class="code leading">
			
			<div class="highlight"><pre>    <span class="nx">t</span> <span class="o">:=</span> <span class="p">[]</span><span class="kt">string</span><span class="p">{</span><span class="s">&quot;g&quot;</span><span class="p">,</span> <span class="s">&quot;h&quot;</span><span class="p">,</span> <span class="s">&quot;i&quot;</span><span class="p">}</span>
    <span class="nx">fmt</span><span class="p">.</span><span class="nx">Println</span><span class="p">(</span><span class="s">&quot;dcl:&quot;</span><span class="p">,</span> <span class="nx">t</span><span class="p">)</span>
</pre></div>

			</td>
		</tr>
	
		<tr>
			<td class="docs"><p>Зрізи можуть бути скомпоновані в багатовимірні структури
даних. Довжина внутрішніх зрізів буде варюватись,
на відміну від багатовимірних масивів.</p>
</td>
			<td class="code">
			
			<div class="highlight"><pre>    <span class="nx">twoD</span> <span class="o">:=</span> <span class="nb">make</span><span class="p">([][]</span><span class="kt">int</span><span class="p">,</span> <span class="mi">3</span><span class="p">)</span>
    <span class="k">for</span> <span class="nx">i</span> <span class="o">:=</span> <span class="mi">0</span><span class="p">;</span> <span class="nx">i</span> <span class="p">&lt;</span> <span class="mi">3</span><span class="p">;</span> <span class="nx">i</span><span class="o">++</span> <span class="p">{</span>
        <span class="nx">innerLen</span> <span class="o">:=</span> <span class="nx">i</span> <span class="o">+</span> <span class="mi">1</span>
        <span class="nx">twoD</span><span class="p">[</span><span class="nx">i</span><span class="p">]</span> <span class="p">=</span> <span class="nb">make</span><span class="p">([]</span><span class="kt">int</span><span class="p">,</span> <span class="nx">innerLen</span><span class="p">)</span>
        <span class="k">for</span> <span class="nx">j</span> <span class="o">:=</span> <span class="mi">0</span><span class="p">;</span> <span class="nx">j</span> <span class="p">&lt;</span> <span class="nx">innerLen</span><span class="p">;</span> <span class="nx">j</span><span class="o">++</span> <span class="p">{</span>
            <span class="nx">twoD</span><span class="p">[</span><span class="nx">i</span><span class="p">][</span><span class="nx">j</span><span class="p">]</span> <span class="p">=</span> <span class="nx">i</span> <span class="o">+</span> <span class="nx">j</span>
        <span class="p">}</span>
    <span class="p">}</span>
    <span class="nx">fmt</span><span class="p">.</span><span class="nx">Println</span><span class="p">(</span><span class="s">&quot;2d: &quot;</span><span class="p">,</span> <span class="nx">twoD</span><span class="p">)</span>
<span class="p">}</span>
</pre></div>

			</td>
		</tr>
	
	</table>
	
	<table>
		
		<tr>
			<td class="docs"><p>Хоч зрізи і іншого типу ніж масиви, відображатимуться
вони однаково, під час друку за допомогою <code>fmt.Println</code>.</p>
</td>
			<td class="code leading">
			
			<div class="highlight"><pre><span class="gp">$</span> go run slices.go
<span class="go">emp: [  ]</span>
<span class="go">set: [a b c]</span>
<span class="go">get: c</span>
<span class="go">len: 3</span>
<span class="go">apd: [a b c d e f]</span>
<span class="go">cpy: [a b c d e f]</span>
<span class="go">sl1: [c d e]</span>
<span class="go">sl2: [a b c d e]</span>
<span class="go">sl3: [c d e f]</span>
<span class="go">dcl: [g h i]</span>
<span class="go">2d:  [[0] [1 2] [2 3 4]]</span>
</pre></div>

			</td>
		</tr>
	
		<tr>
			<td class="docs"><p>Рекомендуємо прочитати <a href="http://blog.golang.org/2011/01/go-slices-usage-and-internals.html">чудовий пост</a>
(за авторства команди розробників Go), щоб
отримати докладну інформацію про розробку та
застосування зрізів в <code>Go</code>.</p>
</td>
			<td class="code empty leading">
			
			
			</td>
		</tr>
	
		<tr>
			<td class="docs"><p>Після того як ми бачили масиви та зрізи,
звернемо увагу на іншу важливу структуру
даних в Go &mdash; <em>мапи</em>.</p>
</td>
			<td class="code empty">
			
			
			</td>
		</tr>
	
	</table>
	


	<p class="next">
		Наступний приклад: <a href="maps">Мапи (Maps)</a>.
	</p>

<p class="footer">
Автор <a href="https://twitter.com/mmcgrana">@mmcgrana</a> | Переклад <a href="https://twitter.com/butuzov">@butuzov</a> | <a href="https://github.com/butuzov/gobyexample/blob/ukrainian/examples/slices">source</a> | <a href="https://github.com/butuzov/gobyexample#license">ліцензія</a>
</p>
</div>
</body>
</html>
